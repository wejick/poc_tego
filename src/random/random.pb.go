// Code generated by protoc-gen-go. DO NOT EDIT.
// source: random.proto

/*
Package random is a generated protocol buffer package.

It is generated from these files:
	random.proto

It has these top-level messages:
	RandomNumberResponse
	RandomNumberRequest
*/
package random

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RandomNumberResponse struct {
	Number int32  `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
	Now    string `protobuf:"bytes,2,opt,name=now" json:"now,omitempty"`
}

func (m *RandomNumberResponse) Reset()                    { *m = RandomNumberResponse{} }
func (m *RandomNumberResponse) String() string            { return proto.CompactTextString(m) }
func (*RandomNumberResponse) ProtoMessage()               {}
func (*RandomNumberResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RandomNumberResponse) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *RandomNumberResponse) GetNow() string {
	if m != nil {
		return m.Now
	}
	return ""
}

type RandomNumberRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *RandomNumberRequest) Reset()                    { *m = RandomNumberRequest{} }
func (m *RandomNumberRequest) String() string            { return proto.CompactTextString(m) }
func (*RandomNumberRequest) ProtoMessage()               {}
func (*RandomNumberRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RandomNumberRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*RandomNumberResponse)(nil), "randomNumberResponse")
	proto.RegisterType((*RandomNumberRequest)(nil), "randomNumberRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Random service

type RandomClient interface {
	Getrandom(ctx context.Context, in *RandomNumberRequest, opts ...grpc.CallOption) (*RandomNumberResponse, error)
}

type randomClient struct {
	cc *grpc.ClientConn
}

func NewRandomClient(cc *grpc.ClientConn) RandomClient {
	return &randomClient{cc}
}

func (c *randomClient) Getrandom(ctx context.Context, in *RandomNumberRequest, opts ...grpc.CallOption) (*RandomNumberResponse, error) {
	out := new(RandomNumberResponse)
	err := grpc.Invoke(ctx, "/random/getrandom", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Random service

type RandomServer interface {
	Getrandom(context.Context, *RandomNumberRequest) (*RandomNumberResponse, error)
}

func RegisterRandomServer(s *grpc.Server, srv RandomServer) {
	s.RegisterService(&_Random_serviceDesc, srv)
}

func _Random_Getrandom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RandomNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RandomServer).Getrandom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/random/Getrandom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RandomServer).Getrandom(ctx, req.(*RandomNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Random_serviceDesc = grpc.ServiceDesc{
	ServiceName: "random",
	HandlerType: (*RandomServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getrandom",
			Handler:    _Random_Getrandom_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "random.proto",
}

func init() { proto.RegisterFile("random.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 146 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4a, 0xcc, 0x4b,
	0xc9, 0xcf, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x72, 0xe0, 0x12, 0x81, 0xf0, 0xfd, 0x4a,
	0x73, 0x93, 0x52, 0x8b, 0x82, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xc4, 0xb8, 0xd8,
	0xf2, 0xc0, 0x22, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x50, 0x9e, 0x90, 0x00, 0x17, 0x73,
	0x5e, 0x7e, 0xb9, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x88, 0xa9, 0xa4, 0xc9, 0x25, 0x8c,
	0x6a, 0x42, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x10, 0x17, 0x4b, 0x5e, 0x62, 0x6e, 0x2a, 0x58,
	0x3b, 0x67, 0x10, 0x98, 0x6d, 0xe4, 0xc2, 0xc5, 0x06, 0x51, 0x2a, 0x64, 0xc5, 0xc5, 0x99, 0x9e,
	0x5a, 0x02, 0xe5, 0x88, 0xe8, 0x61, 0x31, 0x40, 0x4a, 0x54, 0x0f, 0x9b, 0xc3, 0x94, 0x18, 0x92,
	0xd8, 0xc0, 0x2e, 0x37, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xac, 0x3e, 0x46, 0x31, 0xc9, 0x00,
	0x00, 0x00,
}
